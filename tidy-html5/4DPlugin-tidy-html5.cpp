/* --------------------------------------------------------------------------------
 #
 #  4DPlugin-tidy-html5.cpp
 #	source generated by 4D Plugin Wizard
 #	Project : tidy-html5
 #	author : miyako
 #	2019/07/23
 #  
 # --------------------------------------------------------------------------------*/

#include "4DPlugin-tidy-html5.h"

#pragma mark -

void PluginMain(PA_long32 selector, PA_PluginParameters params) {
    
	try
	{
        switch(selector)
        {
			// --- tidy-html5
            
			case 1 :
				Tidy(params);
				break;

        }

	}
	catch(...)
	{

	}
}

#pragma mark -

void Tidy(PA_PluginParameters params) {

    PA_ObjectRef returnValue = PA_CreateObject();
    
    PA_Handle h = PA_GetBlobHandleParameter( params, 1 );
    PA_ObjectRef options = PA_GetObjectParameter( params, 2 );
    
    if(h)
    {
        TidyDoc tdoc = tidyCreate();
        
        if(ob_is_defined(options, L"accessibilityCheckLevel"))
        {
            tidyOptSetInt(tdoc, TidyAccessibilityCheckLevel, (ulong)ob_get_n(options, L"accessibilityCheckLevel"));
        }
        if(ob_is_defined(options, L"altText"))
        {
            CUTF8String altText;
            if(ob_get_a(options, L"altText", &altText))
            {
                tidyOptSetValue(tdoc, TidyAltText, (ctmbstr)altText.c_str());
            }
        }
        if(ob_is_defined(options, L"anchorAsName"))
        {
            tidyOptSetBool(tdoc, TidyAnchorAsName, (Bool)ob_get_b(options, L"anchorAsName"));
        }
        if(ob_is_defined(options, L"asciiChars"))
        {
            tidyOptSetBool(tdoc, TidyAsciiChars, (Bool)ob_get_b(options, L"asciiChars"));
        }
        if(ob_is_defined(options, L"blockTags"))
        {
            PA_CollectionRef tags = ob_get_c(options, L"blockTags");
            if(tags) {
                for(PA_long32 i =0; i < PA_GetCollectionLength(tags); ++i) {
                    PA_Variable v = PA_GetCollectionElement(tags, i);
                    if(PA_GetVariableKind(v) == eVK_Unistring) {
                        PA_Unistring ustr = PA_GetStringVariable(v);
                        C_TEXT t;
                        t.setUTF16String(&ustr);
                        CUTF8String u8;
                        t.copyUTF8String(&u8);
                        tidyOptSetValue(tdoc, TidyBlockTags, (ctmbstr)u8.c_str());
                    }
                }
            }
        }
        if(ob_is_defined(options, L"emptyTags"))
        {
            PA_CollectionRef tags = ob_get_c(options, L"emptyTags");
            if(tags) {
                for(PA_long32 i =0; i < PA_GetCollectionLength(tags); ++i) {
                    PA_Variable v = PA_GetCollectionElement(tags, i);
                    if(PA_GetVariableKind(v) == eVK_Unistring) {
                        PA_Unistring ustr = PA_GetStringVariable(v);
                        C_TEXT t;
                        t.setUTF16String(&ustr);
                        CUTF8String u8;
                        t.copyUTF8String(&u8);
                        tidyOptSetValue(tdoc, TidyEmptyTags, (ctmbstr)u8.c_str());
                    }
                }
            }
        }
        if(ob_is_defined(options, L"inlineTags"))
        {
            PA_CollectionRef tags = ob_get_c(options, L"inlineTags");
            if(tags) {
                for(PA_long32 i =0; i < PA_GetCollectionLength(tags); ++i) {
                    PA_Variable v = PA_GetCollectionElement(tags, i);
                    if(PA_GetVariableKind(v) == eVK_Unistring) {
                        PA_Unistring ustr = PA_GetStringVariable(v);
                        C_TEXT t;
                        t.setUTF16String(&ustr);
                        CUTF8String u8;
                        t.copyUTF8String(&u8);
                        tidyOptSetValue(tdoc, TidyInlineTags, (ctmbstr)u8.c_str());
                    }
                }
            }
        }
        if(ob_is_defined(options, L"preTags"))
        {
            PA_CollectionRef tags = ob_get_c(options, L"preTags");
            if(tags) {
                for(PA_long32 i =0; i < PA_GetCollectionLength(tags); ++i) {
                    PA_Variable v = PA_GetCollectionElement(tags, i);
                    if(PA_GetVariableKind(v) == eVK_Unistring) {
                        PA_Unistring ustr = PA_GetStringVariable(v);
                        C_TEXT t;
                        t.setUTF16String(&ustr);
                        CUTF8String u8;
                        t.copyUTF8String(&u8);
                        tidyOptSetValue(tdoc, TidyPreTags, (ctmbstr)u8.c_str());
                    }
                }
            }
        }
        if(ob_is_defined(options, L"bodyOnly"))
        {
            tidyOptSetBool(tdoc, TidyBodyOnly, (Bool)ob_get_b(options, L"bodyOnly"));
        }
        if(ob_is_defined(options, L"breakBeforeBR"))
        {
            tidyOptSetBool(tdoc, TidyBreakBeforeBR, (Bool)ob_get_b(options, L"breakBeforeBR"));
        }
        if(ob_is_defined(options, L"coerceEndTags"))
        {
            tidyOptSetBool(tdoc, TidyCoerceEndTags, (Bool)ob_get_b(options, L"coerceEndTags"));
        }
        if(ob_is_defined(options, L"CSSPrefix"))
        {
            CUTF8String prefix;
            if(ob_get_a(options, L"CSSPrefix", &prefix))
            {
                tidyOptSetValue(tdoc, TidyCSSPrefix, (ctmbstr)prefix.c_str());
            }
        }
        if(ob_is_defined(options, L"decorateInferredUL"))
        {
            tidyOptSetBool(tdoc, TidyDecorateInferredUL, (Bool)ob_get_b(options, L"decorateInferredUL"));
        }
        if(ob_is_defined(options, L"doctype"))
        {
            CUTF8String doctype;
            if(ob_get_a(options, L"doctype", &doctype))
            {
                tidyOptSetValue(tdoc, TidyDoctype, (ctmbstr)doctype.c_str());
            }
        }
        if(ob_is_defined(options, L"dropEmptyElems"))
        {
            tidyOptSetBool(tdoc, TidyDropEmptyElems, (Bool)ob_get_b(options, L"dropEmptyElems"));
        }
        if(ob_is_defined(options, L"dropEmptyParas"))
        {
            tidyOptSetBool(tdoc, TidyDropEmptyParas, (Bool)ob_get_b(options, L"dropEmptyParas"));
        }
        if(ob_is_defined(options, L"dropPropAttrs"))
        {
            tidyOptSetBool(tdoc, TidyDropPropAttrs, (Bool)ob_get_b(options, L"dropPropAttrs"));
        }
        if(ob_is_defined(options, L"duplicateAttrs"))
        {
            tidyOptSetBool(tdoc, TidyDuplicateAttrs, (Bool)ob_get_b(options, L"duplicateAttrs"));
        }
        if(ob_is_defined(options, L"emacs"))
        {
            tidyOptSetBool(tdoc, TidyEmacs, (Bool)ob_get_b(options, L"emacs"));
        }
        if(ob_is_defined(options, L"encloseBlockText"))
        {
            tidyOptSetBool(tdoc, TidyEncloseBlockText, (Bool)ob_get_b(options, L"encloseBlockText"));
        }
        if(ob_is_defined(options, L"encloseBodyText"))
        {
            tidyOptSetBool(tdoc, TidyEncloseBodyText, (Bool)ob_get_b(options, L"encloseBodyText"));
        }
        if(ob_is_defined(options, L"escapeCdata"))
        {
            tidyOptSetBool(tdoc, TidyEscapeCdata, (Bool)ob_get_b(options, L"escapeCdata"));
        }
        if(ob_is_defined(options, L"escapeScripts"))
        {
            tidyOptSetBool(tdoc, TidyEscapeScripts, (Bool)ob_get_b(options, L"escapeScripts"));
        }
        if(ob_is_defined(options, L"fixBackslash"))
        {
            tidyOptSetBool(tdoc, TidyFixBackslash, (Bool)ob_get_b(options, L"fixBackslash"));
        }
        if(ob_is_defined(options, L"fixComments"))
        {
            tidyOptSetBool(tdoc, TidyFixComments, (Bool)ob_get_b(options, L"fixComments"));
        }
        if(ob_is_defined(options, L"fixUri"))
        {
            tidyOptSetBool(tdoc, TidyFixUri, (Bool)ob_get_b(options, L"fixUri"));
        }
        if(ob_is_defined(options, L"fixUri"))
        {
            tidyOptSetBool(tdoc, TidyFixUri, (Bool)ob_get_b(options, L"fixUri"));
        }
        if(ob_is_defined(options, L"gDocClean"))
        {
            tidyOptSetBool(tdoc, TidyGDocClean, (Bool)ob_get_b(options, L"gDocClean"));
        }
        if(ob_is_defined(options, L"hideComments"))
        {
            tidyOptSetBool(tdoc, TidyHideComments, (Bool)ob_get_b(options, L"hideComments"));
        }
        if(ob_is_defined(options, L"htmlOut"))
        {
            tidyOptSetBool(tdoc, TidyHtmlOut, (Bool)ob_get_b(options, L"htmlOut"));
        }
        if(ob_is_defined(options, L"indentSpaces"))
        {
            tidyOptSetBool(tdoc, TidyIndentSpaces, (Bool)ob_get_b(options, L"indentSpaces"));
        }
        if(ob_is_defined(options, L"indentAttributes"))
        {
            tidyOptSetInt(tdoc, TidyIndentAttributes, (ulong)ob_get_n(options, L"indentAttributes"));
            if (tidyOptGetInt(tdoc, TidyIndentSpaces) == 0)
                tidyOptResetToDefault(tdoc, TidyIndentSpaces);
        }
        if(ob_is_defined(options, L"indentCdata"))
        {
            tidyOptSetInt(tdoc, TidyIndentCdata, (ulong)ob_get_n(options, L"indentCdata"));
            if (tidyOptGetInt(tdoc, TidyIndentSpaces) == 0)
                tidyOptResetToDefault(tdoc, TidyIndentSpaces);
        }
        if(ob_is_defined(options, L"indentContent"))
        {
            tidyOptSetInt(tdoc, TidyIndentContent, (ulong)ob_get_n(options, L"indentContent"));
            if (tidyOptGetInt(tdoc, TidyIndentSpaces) == 0)
                tidyOptResetToDefault(tdoc, TidyIndentSpaces);
        }
        if(ob_is_defined(options, L"joinClasses"))
        {
            tidyOptSetBool(tdoc, TidyJoinClasses, (Bool)ob_get_b(options, L"joinClasses"));
        }
        if(ob_is_defined(options, L"joinStyles"))
        {
            tidyOptSetBool(tdoc, TidyJoinStyles, (Bool)ob_get_b(options, L"joinStyles"));
        }
        if(ob_is_defined(options, L"keepFileTimes"))
        {
            tidyOptSetBool(tdoc, TidyKeepFileTimes, (Bool)ob_get_b(options, L"keepFileTimes"));
        }
        if(ob_is_defined(options, L"keepTabs"))
        {
            tidyOptSetBool(tdoc, TidyKeepTabs, (Bool)ob_get_b(options, L"keepTabs"));
        }
        if(ob_is_defined(options, L"literalAttribs"))
        {
            tidyOptSetBool(tdoc, TidyLiteralAttribs, (Bool)ob_get_b(options, L"literalAttribs"));
        }
        if(ob_is_defined(options, L"logicalEmphasis"))
        {
            tidyOptSetBool(tdoc, TidyLogicalEmphasis, (Bool)ob_get_b(options, L"logicalEmphasis"));
        }
        if(ob_is_defined(options, L"lowerLiterals"))
        {
            tidyOptSetBool(tdoc, TidyLowerLiterals, (Bool)ob_get_b(options, L"lowerLiterals"));
        }
        if(ob_is_defined(options, L"makeBare"))
        {
            tidyOptSetBool(tdoc, TidyMakeBare, (Bool)ob_get_b(options, L"makeBare"));
        }
        if(ob_is_defined(options, L"makeClean"))
        {
            tidyOptSetBool(tdoc, TidyMakeClean, (Bool)ob_get_b(options, L"makeClean"));
        }
        if(ob_is_defined(options, L"mark"))
        {
            tidyOptSetBool(tdoc, TidyMark, (Bool)ob_get_b(options, L"mark"));
        }
        if(ob_is_defined(options, L"mergeDivs"))
        {
            tidyOptSetBool(tdoc, TidyMergeDivs, (Bool)ob_get_b(options, L"mergeDivs"));
        }
        if(ob_is_defined(options, L"mergeEmphasis"))
        {
            tidyOptSetBool(tdoc, TidyMergeEmphasis, (Bool)ob_get_b(options, L"mergeEmphasis"));
        }
        if(ob_is_defined(options, L"mergeSpans"))
        {
            tidyOptSetBool(tdoc, TidyMergeSpans, (Bool)ob_get_b(options, L"mergeSpans"));
        }
        if(ob_is_defined(options, L"metaCharset"))
        {
            tidyOptSetBool(tdoc, TidyMetaCharset, (Bool)ob_get_b(options, L"metaCharset"));
        }
        if(ob_is_defined(options, L"NCR"))
        {
            tidyOptSetBool(tdoc, TidyNCR, (Bool)ob_get_b(options, L"NCR"));
        }
        if(ob_is_defined(options, L"newline"))
        {
            tidyOptSetBool(tdoc, TidyNewline, (Bool)ob_get_b(options, L"newline"));
        }
        if(ob_is_defined(options, L"numEntities"))
        {
            tidyOptSetBool(tdoc, TidyNumEntities, (Bool)ob_get_b(options, L"numEntities"));
        }
        if(ob_is_defined(options, L"omitOptionalTags"))
        {
            tidyOptSetBool(tdoc, TidyOmitOptionalTags, (Bool)ob_get_b(options, L"omitOptionalTags"));
        }
        if(ob_is_defined(options, L"outputBOM"))
        {
            tidyOptSetBool(tdoc, TidyOutputBOM, (Bool)ob_get_b(options, L"outputBOM"));
        }
        if(ob_is_defined(options, L"pPrintTabs"))
        {
            tidyOptSetBool(tdoc, TidyPPrintTabs, (Bool)ob_get_b(options, L"pPrintTabs"));
        }
        if(ob_is_defined(options, L"preserveEntities"))
        {
            tidyOptSetBool(tdoc, TidyPreserveEntities, (Bool)ob_get_b(options, L"preserveEntities"));
        }
        if(ob_is_defined(options, L"priorityAttributes"))
        {
            tidyOptSetBool(tdoc, TidyPriorityAttributes, (Bool)ob_get_b(options, L"priorityAttributes"));
        }
        if(ob_is_defined(options, L"punctWrap"))
        {
            tidyOptSetBool(tdoc, TidyPunctWrap, (Bool)ob_get_b(options, L"punctWrap"));
        }
        if(ob_is_defined(options, L"quiet"))
        {
            tidyOptSetBool(tdoc, TidyQuiet, (Bool)ob_get_b(options, L"quiet"));
        }
        if(ob_is_defined(options, L"quoteAmpersand"))
        {
            tidyOptSetBool(tdoc, TidyQuoteAmpersand, (Bool)ob_get_b(options, L"quoteAmpersand"));
        }
        if(ob_is_defined(options, L"quoteMarks"))
        {
            tidyOptSetBool(tdoc, TidyQuoteMarks, (Bool)ob_get_b(options, L"quoteMarks"));
        }
        if(ob_is_defined(options, L"quoteNbsp"))
        {
            tidyOptSetBool(tdoc, TidyQuoteNbsp, (Bool)ob_get_b(options, L"quoteNbsp"));
        }
        if(ob_is_defined(options, L"replaceColor"))
        {
            tidyOptSetBool(tdoc, TidyReplaceColor, (Bool)ob_get_b(options, L"replaceColor"));
        }
        if(ob_is_defined(options, L"showErrors"))
        {
            tidyOptSetBool(tdoc, TidyShowErrors, (Bool)ob_get_b(options, L"showErrors"));
        }
        if(ob_is_defined(options, L"showInfo"))
        {
            tidyOptSetBool(tdoc, TidyShowInfo, (Bool)ob_get_b(options, L"showInfo"));
        }
        if(ob_is_defined(options, L"showMarkup"))
        {
            tidyOptSetBool(tdoc, TidyShowMarkup, (Bool)ob_get_b(options, L"showMarkup"));
        }
        if(ob_is_defined(options, L"showMetaChange"))
        {
            tidyOptSetBool(tdoc, TidyShowMetaChange, (Bool)ob_get_b(options, L"showMetaChange"));
        }
        if(ob_is_defined(options, L"showWarnings"))
        {
            tidyOptSetBool(tdoc, TidyShowWarnings, (Bool)ob_get_b(options, L"showWarnings"));
        }
        if(ob_is_defined(options, L"skipNested"))
        {
            tidyOptSetBool(tdoc, TidySkipNested, (Bool)ob_get_b(options, L"skipNested"));
        }
        if(ob_is_defined(options, L"sortAttributes"))
        {
            tidyOptSetBool(tdoc, TidySortAttributes, (Bool)ob_get_b(options, L"sortAttributes"));
        }
        if(ob_is_defined(options, L"strictTagsAttr"))
        {
            tidyOptSetBool(tdoc, TidyStrictTagsAttr, (Bool)ob_get_b(options, L"strictTagsAttr"));
        }
        if(ob_is_defined(options, L"styleTags"))
        {
            tidyOptSetBool(tdoc, TidyStyleTags, (Bool)ob_get_b(options, L"styleTags"));
        }
        if(ob_is_defined(options, L"tabSize"))
        {
            tidyOptSetBool(tdoc, TidyTabSize, (Bool)ob_get_b(options, L"tabSize"));
        }
        if(ob_is_defined(options, L"upperCaseAttrs"))
        {
            tidyOptSetBool(tdoc, TidyUpperCaseAttrs, (Bool)ob_get_b(options, L"upperCaseAttrs"));
        }
        if(ob_is_defined(options, L"upperCaseTags"))
        {
            tidyOptSetBool(tdoc, TidyUpperCaseTags, (Bool)ob_get_b(options, L"upperCaseTags"));
        }
        if(ob_is_defined(options, L"useCustomTags"))
        {
            tidyOptSetBool(tdoc, TidyUseCustomTags, (Bool)ob_get_b(options, L"useCustomTags"));
        }
        if(ob_is_defined(options, L"vertSpace"))
        {
            tidyOptSetBool(tdoc, TidyVertSpace, (Bool)ob_get_b(options, L"vertSpace"));
        }
        if(ob_is_defined(options, L"warnPropAttrs"))
        {
            tidyOptSetBool(tdoc, TidyWarnPropAttrs, (Bool)ob_get_b(options, L"warnPropAttrs"));
        }
        if(ob_is_defined(options, L"word2000"))
        {
            tidyOptSetBool(tdoc, TidyWord2000, (Bool)ob_get_b(options, L"word2000"));
        }
        if(ob_is_defined(options, L"wrapAsp"))
        {
            tidyOptSetBool(tdoc, TidyWrapAsp, (Bool)ob_get_b(options, L"wrapAsp"));
        }
        if(ob_is_defined(options, L"wrapAttVals"))
        {
            tidyOptSetBool(tdoc, TidyWrapAttVals, (Bool)ob_get_b(options, L"wrapAttVals"));
        }
        if(ob_is_defined(options, L"wrapJste"))
        {
            tidyOptSetBool(tdoc, TidyWrapJste, (Bool)ob_get_b(options, L"wrapJste"));
        }
        if(ob_is_defined(options, L"wrapLen"))
        {
            tidyOptSetInt(tdoc, TidyWrapLen, (ulong)ob_get_n(options, L"wrapLen"));
        }
        if(ob_is_defined(options, L"wrapPhp"))
        {
            tidyOptSetInt(tdoc, TidyWrapPhp, (ulong)ob_get_n(options, L"wrapPhp"));
        }
        if(ob_is_defined(options, L"wrapScriptlets"))
        {
            tidyOptSetInt(tdoc, TidyWrapScriptlets, (ulong)ob_get_n(options, L"wrapScriptlets"));
        }
        if(ob_is_defined(options, L"wrapSection"))
        {
            tidyOptSetInt(tdoc, TidyWrapSection, (ulong)ob_get_n(options, L"wrapSection"));
        }
        if(ob_is_defined(options, L"writeBack"))
        {
            tidyOptSetBool(tdoc, TidyWriteBack, (Bool)ob_get_b(options, L"writeBack"));
        }
        if(ob_is_defined(options, L"xhtmlOut"))
        {
            tidyOptSetBool(tdoc, TidyXhtmlOut, (Bool)ob_get_b(options, L"xhtmlOut"));
        }
        if(ob_is_defined(options, L"xmlDecl"))
        {
            tidyOptSetBool(tdoc, TidyXmlDecl, (Bool)ob_get_b(options, L"xmlDecl"));
        }
        if(ob_is_defined(options, L"xmlOut"))
        {
            tidyOptSetBool(tdoc, TidyXmlOut, (Bool)ob_get_b(options, L"xmlOut"));
        }
        if(ob_is_defined(options, L"xmlPIs"))
        {
            tidyOptSetBool(tdoc, TidyXmlPIs, (Bool)ob_get_b(options, L"xmlPIs"));
        }
        if(ob_is_defined(options, L"xmlSpace"))
        {
            tidyOptSetBool(tdoc, TidyXmlSpace, (Bool)ob_get_b(options, L"xmlSpace"));
        }
        
        if(ob_is_defined(options, L"xmlTags"))
        {
            tidyOptSetBool(tdoc, TidyXmlTags, (Bool)ob_get_b(options, L"xmlTags"));
        }

        if(ob_is_defined(options, L"encoding"))
        {
            CUTF8String encoding;
            if(ob_get_a(options, L"encoding", &encoding))
            {
                tidySetInCharEncoding(tdoc, (ctmbstr)encoding.c_str());
            }
        }
        
        if(ob_is_defined(options, L"language"))
        {
            CUTF8String language;
            if(ob_get_a(options, L"language", &language))
            {
                tidySetLanguage((ctmbstr)language.c_str());
            }
        }
        
        tidySetOutCharEncoding(tdoc, "utf8");
        
        TidyBuffer inputBuf, outputBuf, errorBuf;

        tidyBufInit(&inputBuf);
        tidyBufInit(&outputBuf);
        tidyBufInit(&errorBuf);
        
        tidyBufAttach(&inputBuf, (byte *)PA_LockHandle(h), PA_GetHandleSize(h));
        
        int isErrorBufferSet = !tidySetErrorBuffer(tdoc, &errorBuf);
        
        ob_set_n(returnValue, L"status", tidyParseBuffer(tdoc, &inputBuf));
        ob_set_b(returnValue, L"detectedGenericXml", tidyDetectedGenericXml(tdoc));
        ob_set_b(returnValue, L"detectedHtmlVersion", tidyDetectedHtmlVersion(tdoc));
        ob_set_b(returnValue, L"detectedXhtml", tidyDetectedXhtml(tdoc));

        int errorCount = tidyErrorCount(tdoc);
        ob_set_n(returnValue, L"errorCount", errorCount);
        
        if(!errorCount)
        {
            tidySaveBuffer(tdoc, &outputBuf);
            std::string html = std::string((const char *)outputBuf.bp, outputBuf.size);
            ob_set_s(returnValue, L"html", (const char *)html.c_str());
        }
        
        if(isErrorBufferSet)
        {
            tidyGeneralInfo(tdoc);
            tidyErrorSummary(tdoc);
            std::string err = std::string((const char *)errorBuf.bp, errorBuf.size);
            ob_set_s(returnValue, L"info", (const char *)err.c_str());
        }

        tidyBufDetach(&inputBuf);

        tidyBufFree(&inputBuf);
        tidyBufFree(&outputBuf);
        tidyBufFree(&errorBuf);
        
        tidyRelease(tdoc);
        
        PA_UnlockHandle(h);
    }
    
    PA_ReturnObject(params, returnValue);
}

